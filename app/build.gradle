/*
 * Created by Orchextra
 *
 * Copyright (C) 2016 Gigigo Mobile Services SL
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
  }

  dependencies {
    classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.6.2'
    classpath 'com.applivery.gradle:applivery-deploy:1.0.0'
    classpath 'io.fabric.tools:gradle:1.25.4'
  }
}

apply plugin: 'com.android.application'
apply from: rootProject.file('gradle/checkstyle.gradle')
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'applivery-plugin'
apply from: '../config/jacoco.gradle'
apply plugin: 'io.fabric'

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    applicationId "com.gigigo.orchextrasdk.demo"
    minSdkVersion 18 //rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode generateAutoVersionCode()
    versionName "3.0-RC" + generateAutoVersionCode()

    ndk {
      abiFilters "armeabi-v7a"
    }

    testApplicationId "com.gigigo.orchextrasdk.demo.test"
    testInstrumentationRunner "com.gigigo.orchextrasdk.demo.test.CucumberTestRunner"
    vectorDrawables.useSupportLibrary = true
    multiDexEnabled true
  }

  buildTypes {
    debug {
      testCoverageEnabled = false
      debuggable true
      applicationIdSuffix ".debug"
    }

    quality {
      signingConfig signingConfigs.debug
      debuggable true
      applicationIdSuffix ".quality"
    }

    release {
      signingConfig signingConfigs.debug
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt')
    }
  }

  lintOptions {
    quiet true
    abortOnError false
    ignoreWarnings true
  }

  testOptions.unitTests.all {
    testLogging {
      events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
      outputs.upToDateWhen { false }
      showStandardStreams = true
    }
  }

  sourceSets {
    androidTest {
      assets.srcDirs = ['src/androidTest/assets']
    }
  }

  packagingOptions {
    exclude 'LICENSE.txt'
  }

  configurations {
    implementation.exclude group: "org.jetbrains", module: "annotations"
  }
}

configurations {
  implementation.exclude group: "org.jetbrains", module: "annotations"
}

android.applicationVariants.all { variant ->
  def applicationId = variant.applicationId
  def adb = android.getAdbExe().toString()
  def variantName = variant.name.capitalize()

  def grantPermissionTask = tasks.create("grant${variantName}Permissions") << {
    "${adb} devices".execute().text.eachLine {
      if (it.endsWith("device")) {
        def device = it.split()[0]
        println "Granting permissions on devices ${device}"
        "${adb} -s ${device} shell pm grant ${applicationId} android.permission.CAMERA".execute()
        "${adb} -s ${device} shell pm grant ${applicationId} android.permission.ACCESS_FINE_LOCATION".
            execute()
      }
    }
  }
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
  implementation 'com.android.support:multidex:1.0.3'

  implementation rootProject.ext.modules.core
  implementation rootProject.ext.modules.geofence
  implementation rootProject.ext.modules.indoorPositioning
  implementation rootProject.ext.modules.imageRecognizer
  implementation rootProject.ext.modules.scanner

  implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
  implementation "com.android.support:design:${rootProject.ext.supportLibVersion}"
  implementation "com.android.support:support-vector-drawable:${rootProject.ext.supportLibVersion}"
  implementation "com.android.support:support-v4:${rootProject.ext.supportLibVersion}"
  implementation "com.android.support:cardview-v7:${rootProject.ext.supportLibVersion}"
  implementation "com.android.support:recyclerview-v7:${rootProject.ext.supportLibVersion}"

/*  implementation "com.google.android.gms:play-services-maps:15.0.1"
  implementation "com.google.android.gms:play-services-location:15.0.1"*/

  implementation rootProject.ext.libraries.playServicesGcm
  implementation rootProject.ext.libraries.playServicesLocation
  implementation rootProject.ext.libraries.playServicesMaps

  implementation 'com.facebook.stetho:stetho:1.5.0'
  implementation 'uk.co.chrisjenx:calligraphy:2.3.0'

  implementation('me.dm7.barcodescanner:zbar:1.8.4') {
    exclude module: 'support-v4'
  }

  testImplementation 'junit:junit:4.12'
  debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
  qualityImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
  releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  }
  androidTestImplementation rootProject.ext.testLibraries.espressoIntents, {
    exclude group: 'com.android.support', module: 'support-annotations'
  }
  androidTestImplementation('com.agoda.kakao:kakao:1.0.1') {
    exclude group: 'com.android.support', module: 'support-annotations'
  }
  androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'

  // Cucumber
  androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1') {
    exclude group: 'com.android.support', module: 'support-annotations'
  }
  androidTestImplementation "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
  androidTestImplementation 'info.cukes:cucumber-android:1.2.5@jar'
  androidTestImplementation 'info.cukes:cucumber-picocontainer:1.2.4'

  // Screenshots
  androidTestImplementation 'com.squareup.spoon:spoon-client:1.7.1'

  implementation('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
    transitive = true
  }
}

dexcount {
  format = "list"
  includeClasses = false
  includeFieldCount = true
  includeTotalMethodCount = true
  orderByMethodCount = false
  verbose = true
  maxTreeDepth = Integer.MAX_VALUE
  enableForInstantRun = false
  runOnEachAssemble = false
}

applivery {
  appId = "59a69f3ae2272dd77951a75b"
  buildPath = "./app/build/outputs/apk/debug/app-debug.apk"
  apiKey = "$System.env.APPLIVERY_API_KEY"
}

repositories {
  mavenCentral()
  maven { url 'https://maven.fabric.io/public' }
}
